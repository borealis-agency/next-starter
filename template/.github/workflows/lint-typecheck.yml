# Simple workflow that does these steps on pull request to certain branches:
# 1. Install npm dependencies (with caching enabled)
# 2. Run JS/TS linting
# 3. Run style linting
# $. Show report from step #2 if any warnings/errors were found

name: Lint and typecheck

on:
  pull_request:
    branches:
      - main
      - develop
      - "sprint/**"

jobs:
  check:
    name: Lint on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
        # Checkout code from repo
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

        # Setup Node.js to be used inside this runner
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install npm packages
        # We don't need audit during CI. Also, prefer locally cached dependencies if that's possible
        run: npm ci --prefer-offline --no-audit

        # Generate JSON report using ESLint. This is used to later show a report inside GitHub UI with warnings and errors (if there are any)
      - name: Run ESLint
        run: npm run lint:js:report
        continue-on-error: true

        # Run Stylelint to check (S)CSS code for errors and warnings
      - name: Run Stylelint
        run: npm run lint:styles
        continue-on-error: true

        # Run TypeScript to check if types are valid inside the project
      - name: Run TypeScript type check
        run: npx tsc --noEmit --pretty
        continue-on-error: true

        # Show ESLint report generated by one of previous steps
      - name: Show Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.2.0
        if: always()
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"
